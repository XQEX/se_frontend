import React, { useState } from "react";
import { useNavigate } from "react-router-dom";
import NavbarEmp from "../../components/NavbarEmp";
import Footer from "../../components/Footer";
import "./PostEmployers.css";

const PostJobEmp: React.FC = () => {
  const navigate = useNavigate();

  const [jobTitle, setJobTitle] = useState("");
  const [location, setLocation] = useState("");
  const [jobDescription, setJobDescription] = useState("");
  const [requirements, setRequirements] = useState("");
  const [salary, setSalary] = useState(""); // ‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô
  const [workDates, setWorkDates] = useState(""); // ‡∏ß‡∏±‡∏ô‡∏ó‡∏≥‡∏á‡∏≤‡∏ô
  const [workHours, setWorkHours] = useState(""); // ‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏≥‡∏á‡∏≤‡∏ô
  const [successMessage, setSuccessMessage] = useState("");

  const handlePostJob = () => {
    if (jobTitle && location && jobDescription && requirements && salary && workDates && workHours) {
      const newJob = {
        id: Date.now(),
        title: jobTitle,
        location,
        description: jobDescription,
        requirements,
        salary,
        workDates,
        workHours,
        postedAt: new Date().toLocaleString("th-TH", {
          dateStyle: "full",
          timeStyle: "short",
        }),
      };

      // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏á Local Storage
      const existingJobs = JSON.parse(localStorage.getItem("jobs") || "[]");
      const updatedJobs = [newJob, ...existingJobs];
      localStorage.setItem("jobs", JSON.stringify(updatedJobs));

      // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
      setSuccessMessage("üéâ ‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏á‡∏≤‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß!");

      // ‡∏ô‡∏≥‡∏ó‡∏≤‡∏á‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å‡∏Ç‡∏≠‡∏á‡∏ô‡∏≤‡∏¢‡∏à‡πâ‡∏≤‡∏á
      setTimeout(() => {
        navigate("/homeemp", { state: { newJob } });
      }, 500);
    } else {
      alert("‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ó‡∏∏‡∏Å‡∏ä‡πà‡∏≠‡∏á‡∏Å‡πà‡∏≠‡∏ô‡πÇ‡∏û‡∏™‡∏ï‡πå‡∏á‡∏≤‡∏ô!");
    }
  };

  return (
    <div>
      <NavbarEmp />
      <div className="post-job-container">
        <h1>‡πÇ‡∏û‡∏™‡∏ï‡πå‡∏á‡∏≤‡∏ô</h1>
        {successMessage && <p className="success-message">{successMessage}</p>}
        <form className="post-job-form">
          <div className="form-group">
            <label>‡∏ä‡∏∑‡πà‡∏≠‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏á‡∏≤‡∏ô</label>
            <input type="text" value={jobTitle} onChange={(e) => setJobTitle(e.target.value)} placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏á‡∏≤‡∏ô" />
          </div>
          <div className="form-group">
            <label>‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô</label>
            <input type="text" value={location} onChange={(e) => setLocation(e.target.value)} placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô" />
          </div>
          <div className="form-group">
            <label>‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô (‡∏ö‡∏≤‡∏ó)</label>
            <input type="number" value={salary} onChange={(e) => setSalary(e.target.value)} placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô" step="1000" />
          </div>
          <div className="form-group">
            <label>‡∏ß‡∏±‡∏ô‡∏ó‡∏≥‡∏á‡∏≤‡∏ô</label>
            <input type="text" value={workDates} onChange={(e) => setWorkDates(e.target.value)} placeholder="‡πÄ‡∏ä‡πà‡∏ô ‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå - ‡∏®‡∏∏‡∏Å‡∏£‡πå" />
          </div>
          <div className="form-group">
            <label>‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏≥‡∏á‡∏≤‡∏ô</label>
            <input type="text" value={workHours} onChange={(e) => setWorkHours(e.target.value)} placeholder="‡πÄ‡∏ä‡πà‡∏ô 09:00 - 18:00" />
          </div>
          <div className="form-group">
            <label>‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏á‡∏≤‡∏ô</label>
            <textarea value={jobDescription} onChange={(e) => setJobDescription(e.target.value)} placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏á‡∏≤‡∏ô" rows={2} />
          </div>
          <div className="form-group">
            <label>‡∏Ñ‡∏∏‡∏ì‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£</label>
            <textarea value={requirements} onChange={(e) => setRequirements(e.target.value)} placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏Ñ‡∏∏‡∏ì‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£" rows={2} />
          </div>
          <button type="button" onClick={handlePostJob} className="submit-button">
            ‡πÇ‡∏û‡∏™‡∏ï‡πå‡∏á‡∏≤‡∏ô
          </button>
        </form>
      </div>
      <Footer />
    </div>
  );
};

export default PostJobEmp;